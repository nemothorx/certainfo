#
# when parsed, blank lines (including any whitespace) are ignored
# all content after the first '#' in a line is removed
#
# the remaining content is parsed, with whitespace (any number of) seperating the following fields:
#
# - server.host.example.com
# - ports (multiple comma seperated). "-starttls" will be determined by port)
# - uripath (path to find content for data check)
#   - MUST begin with a "/" unless it's a placeholder
#   - MUST NOT contain spaces, square or curly brackets (%20 URL encoding fine)
#   - is not used in content checks of imap/smtp and other banner protocols, but a shim must exist so the content field is the fourth
# - code:content (content string to check for)
#   - "code" is optional, expected to be a 3 number code (eg, 404 if you want to check the content of the 404 pages). Code is ':' delimited to the content. 
#   - content MAY contain spaces (but multiple spaces are collapsed)
#   - content MUST NOT contain [square] or {curley} brackets. 


# Only the 'server' field is required. Port will be assumed as 443. 
# Port field must be provided if uripath and content fields are to be checked
#
# * consider parsing the config lines through `column -t` for readability (but dont break the content string checks!)
# * Remember when setting up hosts, to add all relevant ports/services
#
# Final note: Further backwards-compatible refinement of this config is planned thus: 
# - extend field 1 to support "hostname:servername" colon seperated, with intent to be used thus: "-connect $hostname:$port -servername $servername"
# - insert field between server and ports, which MUST be enclosed in square brackets. This content will be treated literally as other ssl options (eg, to force "-starttls imap" on a non-standard port)
# - insert field between server and ports, which MUST be enclosed in curly braces. This content will be impact elements of the script. eg, altering the warning/critical times for specific domains. 
# - the config then would be parsed per-line to obtain-and-remove the [square] and {curley} enclosed data, leaving behind the core four fields to be parsed as normal
#

# basic https checks
example.org             # basic host check
kernel.org      443     # host with a port specified

# content checks
wikipedia.org   443      /          Wikimedia Foundation    # content check at the domain
archive.org     443      /about     Wayback Machine  # content check at a path

# this content check is designed to fail
yahoo.com   443     /           this content does not exist 

# this one will fail with a 404 on the path, so the string isn't even ever checked
yahoo.com   443     /DoesNotExist .

# this content check expects a 404 response code though, and WILL check the string. It should succeed
yahoo.com   443     /DoesNotExist 404:yahoo.com

# email content checks see the banner text. The uripath field must exist here, but is otherwise unused
imap.gmail.com  993     ___     OK Gimap ready  # imap SSL
pop.gmail.com   995     ___     OK Gpop ready   # pop3 SSL
smtp.gmail.com  465     ___     250-smtp.gmail.com at your service
smtp.gmail.com  587     ___     250-smtp.gmail.com at your service

# port 80 examples
example.net     80      /       200:This domain is for use in illustrative examples in documents.
wikimedia.org   80      /       301:location: https://wikimedia.org/
